--------------------------------------------------------------------------------------------------
문제
https://replit.com/@evencoding/Day-Two-Blueprint-2#main.py
--------------------------------------------------------------------------------------------------
"""
내 답
"""

def is_on_list(days, day):
  if(day in days):
    return True

def get_x(days, index):
  return days[index]

def add_x(days, day):
  return days.append(day)

def remove_x(days, day):
  return days.remove(day)

# \/\/\/\/\/\/\  DO NOT TOUCH AREA  \/\/\/\/\/\/\ #
days = ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]

print("Is Wed on 'days' list?", is_on_list(days, "Wed"))

print("The fourth item in 'days' is:", get_x(days, 3))

add_x(days, "Sat")
print(days)

remove_x(days, "Mon")
print(days)
# /\/\/\/\/\/\/\ END DO NOT TOUCH AREA /\/\/\/\/\/\/\ #
--------------------------------------------------------------------------------------------------
"""
His
"""
def is_on_list(a_list=[], word=""):
  return word in a_list

def get_x(a_list=[], index=0):
  return a_list[index]

def add_x(a_list=[], word=""):
  a_list.append(word)

def remove_x(a_list=[], word=""):
  a_list.remove(word)

# \/\/\/\/\/\/\  DO NOT TOUCH AREA  \/\/\/\/\/\/\ #
days = ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]

print("Is Wed on 'days' list?", is_on_list(days, "Wed"))

print("The fourth item in 'days' is:", get_x(days, 3))

add_x(days, "Sat")
print(days)

remove_x(days, "Mon")
print(days)
# /\/\/\/\/\/\/\ END DO NOT TOUCH AREA /\/\/\/\/\/\/\ #
--------------------------------------------------------------------------------------------------
오늘의 강의: 파이썬으로 웹 스크래퍼 만들기 1.4 - 1.8
오늘의 과제: 위의 강의를 시청하신 후, 아래 코드 챌린지를 제출하세요.
제출기간: 익일 오전 6시까지
--------------------------------------------------------------------------------------------------
This Blueprint code is broken. There are some functions missing, you need to create them. When you run the code, the output must look like this!
오늘의 과제를 열어보시면 제대로 작동하지 않습니다. 그 이유는 프로그램이 돌아가기 위한 몇몇 코드들이 없기 때문입니다. 그러므로 프로그램이 제대로 돌아가기 위해 여러분들이 직접 코드를 작성 하셔야 됩니다.
--------------------------------------------------------------------------------------------------
아래와 같은 함수들을 만드세요.
is_on_list
get_x
add_x
remove_x
DO NOT change anything inside of the "DO NOT TOUCH AREA"
해당 코드에서 빠진 함수가 있습니다. 위의 스크린과 같은 모습이 되도록 고쳐보세요.
반드시 위 표기된 함수들 (is_on_list. get_x. add_x. remove_x) 생성해야합니다.
DO NOT TOUCH 영역은 건들지마세요!
--------------------------------------------------------------------------------------------------
is_on_list : 리스트 안에 해당 요소가 있는지 확인하여 존재하면 True값을 반환해주는 함수
get_x : 리스트 안에 해당 인덱스가 가리키는 값을 반환하는 함수
add_x : 리스트에 새로운 값을 추가하는 함수
remove_x : 리스트 안에 있는 해당 요소를 제거하는 함수
--------------------------------------------------------------------------------------------------
1. is_on_list(a_list = [], word= "")
    is_on_list 함수는 days리스트와 단어를 받아와서 해당 단어가 days리스트에 존재하면 True를 그렇지 않으면 False를 반환하는 함수입니다.
    연산자 in을 이용해 간단히 구현할 수 있습니다. 참고 링크
    word in a_list
    in 연산자를 이용해 위와 같은 형태로 작성하시면 됩니다. a_list안에 word가 존재하면 True 값을 그렇지 않으면 False 값을 반환합니다.
2. get_x(a_list = [], index = 0)
    get_x 함수는 days리스트와 index 값을 받아와서 days리스트 안에서 해당 index가 가리키는 값을 반환해주는 함수입니다.
    리스트(List)에서 특정 인덱스(Index)에 해당하는 값을 추출하려면 List[index]라고 작성해주시면 됩니다. 참고 링크
    따라서 get_x 함수의 리턴 값은 a_list[index] 라고 적으시면 됩니다.
    days리스트와 index 값으로 3을 가져 왔으므로 days리스트에서 인덱스 3에 해당하는 값을 리턴시켜줍니다. 리스트의 인덱스 값은 0부터 시작하므로 days리스트의 세번째 값은 "Thu" 입니다.
3. add_x(a_list = [], word = "")
    add_x 함수는 days리스트와 특정 단어를 받아와서 단어를 days리스트에 추가해주는 함수입니다.
    리스트의 끝부분에 특정 요소를 추가하기 위해선 append() 메서드를 사용합니다.
    참고 링크
    따라서 함수 add_x 의 리턴 값은 a_list.append(word) 라고 작성해주시면 됩니다.
4. remove_x(a_list = [], word ="")
    remove_x 함수는 days리스트 안에 넘겨 받은 단어(여기선 "Mon")가 있으면 삭제를 시키는 함수입니다.
    리스트의 요소를 삭제할 땐 remove() 메서드를 사용합니다.
    참고 링크
    단, remove() 는 값이 같은 첫번째 요소만 삭제합니다. 예를 들어 list = ["A", "B", "A"] 라는 리스트가 존재할 때, list.remove("A") 를 실행 시키면 list의 결과는 list = ["B", "A"] 가 됩니다. 첫번째 "A"만 삭제 되고 뒤에 있던 "A"는 삭제되지 않고 그대로 있는 것을 확인할 수 있습니다.
    따라서 함수 remove_x 의 리턴 값은 a_list.remove(word) 라고 작성해주시면 됩니다.
--------------------------------------------------------------------------------------------------